<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

<!--    &lt;!&ndash; redis连接池配置 &ndash;&gt;-->
<!--    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
<!--        <property name="maxTotal" value="${redis.maxTotal}"></property>-->
<!--        <property name="maxIdle" value="${redis.maxIdle}"/>-->
<!--        <property name="maxWaitMillis" value="${redis.maxWait}"/>-->
<!--        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>-->
<!--        <property name="testOnReturn" value="${redis.testOnReturn}"></property>-->
<!--    </bean>-->

<!--    &lt;!&ndash; redis连接工厂 &ndash;&gt;-->
<!--    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
<!--        <property name="poolConfig" ref="jedisPoolConfig"/>-->

<!--        <property name="hostName" value="${redis.host}"/>-->
<!--        <property name="port" value="${redis.port}"/>-->
<!--        <property name="password" value="${redis.password}"/>-->
<!--        <property name="timeout" value="${redis.timeout}"></property>-->
<!--    </bean>-->

<!--    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">-->
<!--        <property name="connectionFactory" ref="connectionFactory"/>-->

<!--        <property name="keySerializer">-->
<!--            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->
<!--        </property>-->
<!--        <property name="valueSerializer">-->
<!--            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>-->
<!--        </property>-->

<!--        <property name="hashKeySerializer">-->
<!--            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
<!--        </property>-->
<!--        <property name="hashValueSerializer">-->
<!--            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
<!--        </property>-->
<!--    </bean>-->

<!--    &lt;!&ndash; 缓存拦截器配置 &ndash;&gt;-->
<!--    <bean id="methodCacheInterceptor" class="com.ssm.interceptor.MethodCacheInterceptor">-->
<!--        <property name="redisUtil" ref="redisUtil"/>-->
<!--        <property name="defaultCacheExpireTime" value="${defaultCacheExpireTime}"/>-->
<!--        &lt;!&ndash; 禁用缓存的类名列表 &ndash;&gt;-->
<!--        <property name="targetNamesList">-->
<!--            <list>-->
<!--                <value></value>-->
<!--            </list>-->
<!--        </property>-->

<!--        &lt;!&ndash; 禁用缓存的方法名列表 &ndash;&gt;-->
<!--        <property name="methodNamesList">-->
<!--            <list>-->
<!--                <value></value>-->
<!--            </list>-->
<!--        </property>-->
<!--    </bean>-->

<!--    <bean id="redisUtil" class="com.ssm.util.RedisUtil">-->
<!--        <property name="redisTemplate" ref="redisTemplate"/>-->
<!--    </bean>-->

<!--    &lt;!&ndash;配置切面拦截方法 &ndash;&gt;-->
<!--    <aop:config proxy-target-class="true">-->
<!--        <aop:pointcut id="controllerMethodPointcut" expression="execution(* com.ssm.service.impl.*.list*(..))"/>-->
<!--        <aop:advisor advice-ref="methodCacheInterceptor" pointcut-ref="controllerMethodPointcut"/>-->
<!--    </aop:config>-->
    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true" />

<!--    &lt;!&ndash;Jedis连接池的相关配置&ndash;&gt;-->
<!--    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
<!--        &lt;!&ndash;新版是maxTotal，旧版是maxActive&ndash;&gt;-->
<!--        <property name="maxTotal">-->
<!--            <value>${redis.pool.maxActive}</value>-->
<!--        </property>-->
<!--        <property name="maxIdle">-->
<!--            <value>${redis.pool.maxIdle}</value>-->
<!--        </property>-->
<!--        <property name="testOnBorrow" value="true"/>-->
<!--        <property name="testOnReturn" value="true"/>-->
<!--    </bean>-->

<!--    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">-->
<!--        <constructor-arg name="poolConfig" ref="poolConfig" />-->
<!--        <constructor-arg name="host" value="${redis.host}" />-->
<!--        <constructor-arg name="port" value="${redis.port}" type="int" />-->
<!--        <constructor-arg name="timeout" value="${redis.timeout}" type="int" />-->
<!--        <constructor-arg name="password" value="${redis.password}" />-->
<!--        <constructor-arg name="database" value="${redis.database}" type="int" />-->

<!--    </bean>-->
    <bean id="poolConfig"  class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"></property>
        <property name="minIdle" value="${redis.minIdle}"></property>
        <property name="maxTotal" value="${redis.maxTotal}"></property>
<!--        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"></property>-->
        <property name="testOnBorrow" value="${redis.testOnBorrow}"></property>
    </bean>
    <!--链接redis-->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}"></property>
        <property name="port" value="${redis.port}"></property>
        <property name="password" value="${redis.password}"></property>
        <property name="poolConfig" ref="poolConfig"></property>
    </bean>

<!--    &lt;!&ndash; jedis客户端集群版 &ndash;&gt;-->
<!--    <bean id="jedisCluster" class="redis.clients.jedis.JedisCluster">-->
<!--        <constructor-arg name="nodes">-->
<!--            <set>-->
<!--                <bean class="redis.clients.jedis.HostAndPort">-->
<!--                    <constructor-arg name="host" value="192.168.179.128"></constructor-arg>-->
<!--                    <constructor-arg name="port" value="6379"></constructor-arg>-->
<!--                </bean>-->
<!--            </set>-->
<!--        </constructor-arg>-->
<!--        <constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>-->
<!--    </bean>-->

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="connectionFactory" >
        <!--以下针对各种数据进行序列化方式的选择-->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
    </bean>
</beans>
